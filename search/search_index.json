{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Frontend Deployment Instruction This guide assumes the backend deployment instructions were executed first. Step 1 \u2014 Install Node.js Install nodejs and npm sudo apt install nodejs Step 2 \u2014 Setting up the Production Build Navigate to the frontend folder from the root of the project directory cd frontend Install Node Modules npm install Create the Production Build npm run build Step 3 \u2014 Configuring the Deployment Location Open a new server block in Nginx\u2019s sites-available directory sudo nano /etc/nginx/sites-available/react Specify server block information /etc/nginx/sites-available/react server { listen 80 default_server; listen [::]:80 default_server; root /home/ubuntu/ta-management/frontend/build; index index.html index.htm index.nginx-debian.html; server_name www.ua-compsci-ta.ca ua-compsci-ta.ca; location / { try_files $uri $uri/ = 404; } } Restart nginx sudo systemctl restart nginx For updates to the React application If you would like to deploy any changes made to the frontend files: Navigate to the frontend directory npm run build sudo systemctl restart nginx Reference DigitalOcean","title":"Frontend"},{"location":"#frontend-deployment-instruction","text":"This guide assumes the backend deployment instructions were executed first.","title":"Frontend Deployment Instruction"},{"location":"#step-1-install-nodejs","text":"","title":"Step 1 \u2014 Install Node.js"},{"location":"#install-nodejs-and-npm","text":"sudo apt install nodejs","title":"Install nodejs and npm"},{"location":"#step-2-setting-up-the-production-build","text":"","title":"Step 2 \u2014 Setting up the Production Build"},{"location":"#navigate-to-the-frontend-folder-from-the-root-of-the-project-directory","text":"cd frontend","title":"Navigate to the frontend folder from the root of the project directory"},{"location":"#install-node-modules","text":"npm install","title":"Install Node Modules"},{"location":"#create-the-production-build","text":"npm run build","title":"Create the Production Build"},{"location":"#step-3-configuring-the-deployment-location","text":"","title":"Step 3 \u2014 Configuring the Deployment Location"},{"location":"#open-a-new-server-block-in-nginxs-sites-available-directory","text":"sudo nano /etc/nginx/sites-available/react","title":"Open a new server block in Nginx\u2019s sites-available directory"},{"location":"#specify-server-block-information","text":"/etc/nginx/sites-available/react server { listen 80 default_server; listen [::]:80 default_server; root /home/ubuntu/ta-management/frontend/build; index index.html index.htm index.nginx-debian.html; server_name www.ua-compsci-ta.ca ua-compsci-ta.ca; location / { try_files $uri $uri/ = 404; } }","title":"Specify server block information"},{"location":"#restart-nginx","text":"sudo systemctl restart nginx","title":"Restart nginx"},{"location":"#for-updates-to-the-react-application","text":"If you would like to deploy any changes made to the frontend files: Navigate to the frontend directory npm run build sudo systemctl restart nginx","title":"For updates to the React application"},{"location":"#reference","text":"DigitalOcean","title":"Reference"},{"location":"backend/","text":"Backend Deployment Instruction Project Installation Location Copy the project directory into /home/ubuntu/ta-management/ Operating System Requirements Ubuntu 18.04.6 LTS Ubuntu 20.04.04 LTS Step 1 \u2014 Installing Packages from the Ubuntu Repositories Download the latest package information sudo apt update Install these packages sudo apt install python3-pip python3-dev libpq-dev postgresql postgresql-contrib nginx curl Step 2 \u2014 Creating the PostgreSQL Database and User Login to PostgreSQL sudo -u postgres psql Create a database CREATE DATABASE myproject; Create a database user for your project and select a secure password CREATE USER myprojectuser WITH PASSWORD 'password'; Set the default encoding to UTF-8 which Django expects ALTER ROLE myprojectuser SET client_encoding TO 'utf8'; Set the default transaction isolation scheme to read committed to block reads from uncommitted transactions ALTER ROLE myprojectuser SET default_transaction_isolation TO 'read committed'; Set the relevant timezone ALTER ROLE myprojectuser SET timezone TO 'UTC'; Give new user access to administer your new database GRANT ALL PRIVILEGES ON DATABASE myproject TO myprojectuser; Step 3 \u2014 Creating a Python Virtual Environment using venv for your Project Upgrade pip sudo -H pip3 install --upgrade pip Move into this directory cd /home/ubuntu/ta-management/backend/ta_sys/ Create a Python virtual environment venv env Activate the virtual environment source env/bin/activate Install these Python packages in your virtual environment pip install django gunicorn psycopg2-binary Move to backend directory cd .. Install packages from requirements.txt pip install -r requirement.txt Step 4 \u2014 Configuring the Django Project Open settings.py sudo vim ~/ta-management/backend/ta_sys/ta_sys/settings.py Add the database configuration settings.py DATABASES = { 'default': { 'ENGINE': 'django.db.backends.postgresql_psycopg2', 'NAME': 'myproject', 'USER': 'myprojectuser', 'PASSWORD': 'password', 'HOST': 'localhost', 'PORT': '', } } Step 5 - Completing the Initial Project Setup Make migrations (env) ~/ta-management/backend/ta_sys/manage.py makemigrations Apply migrations (env) ~/ta-management/backend/ta_sys/manage.py migrate Create an administrative user for the project (env) ~/ta-management/backend/ta_sys/manage.py createsuperuser Step 6 \u2014 Testing Gunicorn\u2019s Ability to Serve the Project Move into project directory (env) cd ta-management/backend/ta_sys Run gunicorn to load the project's WSGI module (env) gunicorn --bind 0.0.0.0:8000 ta_sys.wsgi Deactivate the virtual environment (env) deactivate Step 7 \u2014 Creating systemd Socket and Service Files for Gunicorn Create and open a systemd socket file sudo nano /etc/systemd/system/gunicorn.socket /etc/systemd/system/gunicorn.socket [Unit] Description=gunicorn socket [Socket] ListenStream=/run/gunicorn.sock [Install] WantedBy=sockets.target Add ubuntu to www-data group sudo usermod -a -G www-data ubuntu Create and open a systemd service file for Gunicorn sudo nano /etc/systemd/system/gunicorn.service /etc/systemd/system/gunicorn.service [Unit] Description=gunicorn daemon Requires=gunicorn.socket After=network.target [Service] User=ubuntu Group=www-data WorkingDirectory=/home/ubuntu/ta-management/backend/ta_sys ExecStart=/home/ubuntu/ta-management/backend/ta_sys/env/bin/gunicorn \\ --access-logfile - \\ --workers 12 \\ --bind unix:/run/gunicorn.sock \\ ta_sys.wsgi:application [Install] WantedBy=multi-user.target Start the Gunicorn Socket sudo systemctl start gunicorn.socket Enable the Gunicorn Socket sudo systemctl enable gunicorn.socket Step 8 \u2014 Checking for the Gunicorn Socket File Check the status of the process to find out whether it was able to start sudo systemctl status gunicorn.socket ubuntu@ta-management-final:~$ sudo systemctl status gunicorn.socket Loaded: loaded (/etc/systemd/system/gunicorn.socket; enabled; vendor preset: Active: active (running) since Sun 2022-03-27 22:29:33 UTC; 5 days ago Listen: /run/gunicorn.sock (Stream) CGroup: /system.slice/gunicorn.socket Mar 27 22:29:33 ta-management-final systemd[1]: Listening on gunicorn socket. Check for the existence of the gunicorn.sock file within the /run directory file /run/gunicorn.sock Output ubuntu@ta-management-final:~$ file /run/gunicorn.sock /run/gunicorn.sock: socket Check the Gunicorn socket\u2019s logs sudo journalctl -u gunicorn.socket Output ubuntu@ta-management-final:~$ sudo journalctl -u gunicorn.socket -- Logs begin at Sun 2022-03-27 08:36:42 UTC, end at Sat 2022-04-02 02:33:52 UTC Mar 27 22:29:33 ta-management-final systemd[1]: Listening on gunicorn socket. Step 9 \u2014 Testing Socket Activation Check the status sudo systemctl status gunicorn Output \u25cf gunicorn.service - gunicorn daemon Loaded: loaded (/etc/systemd/system/gunicorn.service; disabled; vendor preset: enabled) Active: inactive (dead) Test the socket activation mechanism by sending a connection to the socket curl --unix-socket /run/gunicorn.sock localhost Check the status again sudo systemctl status gunicorn Output \u25cf gunicorn.service - gunicorn daemon Loaded: loaded (/etc/systemd/system/gunicorn.service; disabled; vendor preset: enabled) Active: active (running) since Tue 2022-03-29 05:28:48 UTC; 3 days ago Main PID: 13446 (gunicorn) Tasks: 13 (limit: 4915) CGroup: /system.slice/gunicorn.service \u251c\u250013446 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u251c\u250013482 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u251c\u250013484 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u251c\u250013486 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u251c\u250013488 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u251c\u250013490 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u251c\u250013491 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u251c\u250013493 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u251c\u250013495 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u251c\u250013497 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u251c\u250013498 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u251c\u250013499 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u2514\u250013500 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ ... Check the logs for additional details if problem occurs sudo journalctl -u gunicorn After making any changes to gunicorn.service file sudo systemctl daemon-reload Restart the Gunicorn process sudo systemctl restart gunicorn Step 10 - Configure Nginx to Proxy Pass to Gunicorn Open a new server block in Nginx\u2019s sites-available directory sudo nano /etc/nginx/sites-available/django Specify that the block should listen on port 80, the location of static assets, and information about the favicon /etc/nginx/sites-available/django server { listen 80 default_server; listen [::]:80 default_server; server_name api.ua-compsci-ta.ca; location = /favicon.ico { access_log off; log_not_found off; } location /static/ { root /home/ubuntu/ta-management/backend/ta_sys; } location / { include proxy_params; proxy_pass http://unix:/run/gunicorn.sock; } } Enable the file by linking it to the sites-enabled directory sudo ln -s /etc/nginx/sites-available/myproject /etc/nginx/sites-enabled Test the Nginx configuration for syntax errors sudo nginx -t Output nginx: the configuration file /etc/nginx/nginx.conf syntax is ok nginx: configuration file /etc/nginx/nginx.conf test is successful If there are no errors, restart Nginx sudo systemctl restart nginx Adjust the firewall settings by removing the rule to open port 8000 sudo ufw delete allow 8000 Allow normal traffic on ports 80 and 443 sudo ufw allow 'Nginx Full' For updates to Django Application sudo systemctl restart gunicorn For changes in Gunicorn socket or service files sudo systemctl daemon-reload sudo systemctl restart gunicorn.socket gunicorn.service For changes in Nginx server block configuration sudo nginx -t && sudo systemctl restart nginx Reference DigitalOcean","title":"Backend"},{"location":"backend/#backend-deployment-instruction","text":"","title":"Backend Deployment Instruction"},{"location":"backend/#project-installation-location","text":"","title":"Project Installation Location"},{"location":"backend/#copy-the-project-directory-into","text":"/home/ubuntu/ta-management/","title":"Copy the project directory into"},{"location":"backend/#operating-system-requirements","text":"Ubuntu 18.04.6 LTS Ubuntu 20.04.04 LTS","title":"Operating System Requirements"},{"location":"backend/#step-1-installing-packages-from-the-ubuntu-repositories","text":"","title":"Step 1 \u2014 Installing Packages from the Ubuntu Repositories"},{"location":"backend/#download-the-latest-package-information","text":"sudo apt update","title":"Download the latest package information"},{"location":"backend/#install-these-packages","text":"sudo apt install python3-pip python3-dev libpq-dev postgresql postgresql-contrib nginx curl","title":"Install these packages"},{"location":"backend/#step-2-creating-the-postgresql-database-and-user","text":"","title":"Step 2 \u2014 Creating the PostgreSQL Database and User"},{"location":"backend/#login-to-postgresql","text":"sudo -u postgres psql","title":"Login to PostgreSQL"},{"location":"backend/#create-a-database","text":"CREATE DATABASE myproject;","title":"Create a database"},{"location":"backend/#create-a-database-user-for-your-project-and-select-a-secure-password","text":"CREATE USER myprojectuser WITH PASSWORD 'password';","title":"Create a database user for your project and select a secure password"},{"location":"backend/#set-the-default-encoding-to-utf-8-which-django-expects","text":"ALTER ROLE myprojectuser SET client_encoding TO 'utf8';","title":"Set the default encoding to UTF-8 which Django expects"},{"location":"backend/#set-the-default-transaction-isolation-scheme-to-read-committed-to-block-reads-from-uncommitted-transactions","text":"ALTER ROLE myprojectuser SET default_transaction_isolation TO 'read committed';","title":"Set the default transaction isolation scheme to read committed to block reads from uncommitted transactions"},{"location":"backend/#set-the-relevant-timezone","text":"ALTER ROLE myprojectuser SET timezone TO 'UTC';","title":"Set the relevant timezone"},{"location":"backend/#give-new-user-access-to-administer-your-new-database","text":"GRANT ALL PRIVILEGES ON DATABASE myproject TO myprojectuser;","title":"Give new user access to administer your new database"},{"location":"backend/#step-3-creating-a-python-virtual-environment-using-venv-for-your-project","text":"","title":"Step 3 \u2014 Creating a Python Virtual Environment using venv for your Project"},{"location":"backend/#upgrade-pip","text":"sudo -H pip3 install --upgrade pip","title":"Upgrade pip"},{"location":"backend/#move-into-this-directory","text":"cd /home/ubuntu/ta-management/backend/ta_sys/","title":"Move into this directory"},{"location":"backend/#create-a-python-virtual-environment","text":"venv env","title":"Create a Python virtual environment"},{"location":"backend/#activate-the-virtual-environment","text":"source env/bin/activate","title":"Activate the virtual environment"},{"location":"backend/#install-these-python-packages-in-your-virtual-environment","text":"pip install django gunicorn psycopg2-binary","title":"Install these Python packages in your virtual environment"},{"location":"backend/#move-to-backend-directory","text":"cd ..","title":"Move to backend directory"},{"location":"backend/#install-packages-from-requirementstxt","text":"pip install -r requirement.txt","title":"Install packages from requirements.txt"},{"location":"backend/#step-4-configuring-the-django-project","text":"","title":"Step 4 \u2014 Configuring the Django Project"},{"location":"backend/#open-settingspy","text":"sudo vim ~/ta-management/backend/ta_sys/ta_sys/settings.py","title":"Open settings.py"},{"location":"backend/#add-the-database-configuration","text":"settings.py DATABASES = { 'default': { 'ENGINE': 'django.db.backends.postgresql_psycopg2', 'NAME': 'myproject', 'USER': 'myprojectuser', 'PASSWORD': 'password', 'HOST': 'localhost', 'PORT': '', } }","title":"Add the database configuration"},{"location":"backend/#step-5-completing-the-initial-project-setup","text":"","title":"Step 5 - Completing the Initial Project Setup"},{"location":"backend/#make-migrations","text":"(env) ~/ta-management/backend/ta_sys/manage.py makemigrations","title":"Make migrations"},{"location":"backend/#apply-migrations","text":"(env) ~/ta-management/backend/ta_sys/manage.py migrate","title":"Apply migrations"},{"location":"backend/#create-an-administrative-user-for-the-project","text":"(env) ~/ta-management/backend/ta_sys/manage.py createsuperuser","title":"Create an administrative user for the project"},{"location":"backend/#step-6-testing-gunicorns-ability-to-serve-the-project","text":"","title":"Step 6 \u2014 Testing Gunicorn\u2019s Ability to Serve the Project"},{"location":"backend/#move-into-project-directory","text":"(env) cd ta-management/backend/ta_sys","title":"Move into project directory"},{"location":"backend/#run-gunicorn-to-load-the-projects-wsgi-module","text":"(env) gunicorn --bind 0.0.0.0:8000 ta_sys.wsgi","title":"Run gunicorn to load the project's WSGI module"},{"location":"backend/#deactivate-the-virtual-environment","text":"(env) deactivate","title":"Deactivate the virtual environment"},{"location":"backend/#step-7-creating-systemd-socket-and-service-files-for-gunicorn","text":"","title":"Step 7 \u2014 Creating systemd Socket and Service Files for Gunicorn"},{"location":"backend/#create-and-open-a-systemd-socket-file","text":"sudo nano /etc/systemd/system/gunicorn.socket /etc/systemd/system/gunicorn.socket [Unit] Description=gunicorn socket [Socket] ListenStream=/run/gunicorn.sock [Install] WantedBy=sockets.target","title":"Create and open a systemd socket file"},{"location":"backend/#add-ubuntu-to-www-data-group","text":"sudo usermod -a -G www-data ubuntu","title":"Add ubuntu to www-data group"},{"location":"backend/#create-and-open-a-systemd-service-file-for-gunicorn","text":"sudo nano /etc/systemd/system/gunicorn.service /etc/systemd/system/gunicorn.service [Unit] Description=gunicorn daemon Requires=gunicorn.socket After=network.target [Service] User=ubuntu Group=www-data WorkingDirectory=/home/ubuntu/ta-management/backend/ta_sys ExecStart=/home/ubuntu/ta-management/backend/ta_sys/env/bin/gunicorn \\ --access-logfile - \\ --workers 12 \\ --bind unix:/run/gunicorn.sock \\ ta_sys.wsgi:application [Install] WantedBy=multi-user.target","title":"Create and open a systemd service file for Gunicorn"},{"location":"backend/#start-the-gunicorn-socket","text":"sudo systemctl start gunicorn.socket","title":"Start the Gunicorn Socket"},{"location":"backend/#enable-the-gunicorn-socket","text":"sudo systemctl enable gunicorn.socket","title":"Enable the Gunicorn Socket"},{"location":"backend/#step-8-checking-for-the-gunicorn-socket-file","text":"","title":"Step 8 \u2014 Checking for the Gunicorn Socket File"},{"location":"backend/#check-the-status-of-the-process-to-find-out-whether-it-was-able-to-start","text":"sudo systemctl status gunicorn.socket ubuntu@ta-management-final:~$ sudo systemctl status gunicorn.socket Loaded: loaded (/etc/systemd/system/gunicorn.socket; enabled; vendor preset: Active: active (running) since Sun 2022-03-27 22:29:33 UTC; 5 days ago Listen: /run/gunicorn.sock (Stream) CGroup: /system.slice/gunicorn.socket Mar 27 22:29:33 ta-management-final systemd[1]: Listening on gunicorn socket.","title":"Check the status of the process to find out whether it was able to start"},{"location":"backend/#check-for-the-existence-of-the-gunicornsock-file-within-the-run-directory","text":"file /run/gunicorn.sock Output ubuntu@ta-management-final:~$ file /run/gunicorn.sock /run/gunicorn.sock: socket","title":"Check for the existence of the gunicorn.sock file within the /run directory"},{"location":"backend/#check-the-gunicorn-sockets-logs","text":"sudo journalctl -u gunicorn.socket Output ubuntu@ta-management-final:~$ sudo journalctl -u gunicorn.socket -- Logs begin at Sun 2022-03-27 08:36:42 UTC, end at Sat 2022-04-02 02:33:52 UTC Mar 27 22:29:33 ta-management-final systemd[1]: Listening on gunicorn socket.","title":"Check the Gunicorn socket\u2019s logs"},{"location":"backend/#step-9-testing-socket-activation","text":"","title":"Step 9 \u2014 Testing Socket Activation"},{"location":"backend/#check-the-status","text":"sudo systemctl status gunicorn Output \u25cf gunicorn.service - gunicorn daemon Loaded: loaded (/etc/systemd/system/gunicorn.service; disabled; vendor preset: enabled) Active: inactive (dead)","title":"Check the status"},{"location":"backend/#test-the-socket-activation-mechanism-by-sending-a-connection-to-the-socket","text":"curl --unix-socket /run/gunicorn.sock localhost","title":"Test the socket activation mechanism by sending a connection to the socket"},{"location":"backend/#check-the-status-again","text":"sudo systemctl status gunicorn Output \u25cf gunicorn.service - gunicorn daemon Loaded: loaded (/etc/systemd/system/gunicorn.service; disabled; vendor preset: enabled) Active: active (running) since Tue 2022-03-29 05:28:48 UTC; 3 days ago Main PID: 13446 (gunicorn) Tasks: 13 (limit: 4915) CGroup: /system.slice/gunicorn.service \u251c\u250013446 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u251c\u250013482 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u251c\u250013484 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u251c\u250013486 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u251c\u250013488 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u251c\u250013490 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u251c\u250013491 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u251c\u250013493 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u251c\u250013495 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u251c\u250013497 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u251c\u250013498 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u251c\u250013499 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ \u2514\u250013500 /home/ubuntu/ta-management/backend/ta_sys/env/bin/python3 /home/ubuntu/ta-management/backend/ta_sys/env/ ...","title":"Check the status again"},{"location":"backend/#check-the-logs-for-additional-details-if-problem-occurs","text":"sudo journalctl -u gunicorn","title":"Check the logs for additional details if problem occurs"},{"location":"backend/#after-making-any-changes-to-gunicornservice-file","text":"sudo systemctl daemon-reload","title":"After making any changes to gunicorn.service file"},{"location":"backend/#restart-the-gunicorn-process","text":"sudo systemctl restart gunicorn","title":"Restart the Gunicorn process"},{"location":"backend/#step-10-configure-nginx-to-proxy-pass-to-gunicorn","text":"","title":"Step 10 - Configure Nginx to Proxy Pass to Gunicorn"},{"location":"backend/#open-a-new-server-block-in-nginxs-sites-available-directory","text":"sudo nano /etc/nginx/sites-available/django","title":"Open a new server block in Nginx\u2019s sites-available directory"},{"location":"backend/#specify-that-the-block-should-listen-on-port-80-the-location-of-static-assets-and-information-about-the-favicon","text":"/etc/nginx/sites-available/django server { listen 80 default_server; listen [::]:80 default_server; server_name api.ua-compsci-ta.ca; location = /favicon.ico { access_log off; log_not_found off; } location /static/ { root /home/ubuntu/ta-management/backend/ta_sys; } location / { include proxy_params; proxy_pass http://unix:/run/gunicorn.sock; } }","title":"Specify that the block should listen on port 80, the location of static assets, and information about the favicon"},{"location":"backend/#enable-the-file-by-linking-it-to-the-sites-enabled-directory","text":"sudo ln -s /etc/nginx/sites-available/myproject /etc/nginx/sites-enabled","title":"Enable the file by linking it to the sites-enabled directory"},{"location":"backend/#test-the-nginx-configuration-for-syntax-errors","text":"sudo nginx -t Output nginx: the configuration file /etc/nginx/nginx.conf syntax is ok nginx: configuration file /etc/nginx/nginx.conf test is successful","title":"Test the Nginx configuration for syntax errors"},{"location":"backend/#if-there-are-no-errors-restart-nginx","text":"sudo systemctl restart nginx","title":"If there are no errors, restart Nginx"},{"location":"backend/#adjust-the-firewall-settings-by-removing-the-rule-to-open-port-8000","text":"sudo ufw delete allow 8000","title":"Adjust the firewall settings by removing the rule to open port 8000"},{"location":"backend/#allow-normal-traffic-on-ports-80-and-443","text":"sudo ufw allow 'Nginx Full'","title":"Allow normal traffic on ports 80 and 443"},{"location":"backend/#for-updates-to-django-application","text":"sudo systemctl restart gunicorn","title":"For updates to Django Application"},{"location":"backend/#for-changes-in-gunicorn-socket-or-service-files","text":"sudo systemctl daemon-reload sudo systemctl restart gunicorn.socket gunicorn.service","title":"For changes in Gunicorn socket or service files"},{"location":"backend/#for-changes-in-nginx-server-block-configuration","text":"sudo nginx -t && sudo systemctl restart nginx","title":"For changes in Nginx server block configuration"},{"location":"backend/#reference","text":"DigitalOcean","title":"Reference"}]}